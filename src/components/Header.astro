---
const { dataHeader } = Astro.props
---

<header class="bg-[#8A8D6D] shadow-md w-full fixed top-0 z-50 flex items-center justify-center">
  <nav class="flex justify-between items-center w-full px-10 h-16 relative">
    <!-- Logo -->
    <img src={dataHeader.logo} width={60} alt="Logo">

    <!-- Desktop Navigation -->
    <ul class="hidden md:flex gap-16">
      {dataHeader.navbar.map((item: { titulo: string, link: string }, i: number) => (
        <li>
          <a href={item.link} class="text-xl hover:text-pink-500">{item.titulo}</a>
        </li>
      ))}
    </ul>

    <!-- Mobile Menu Button -->
    <button 
      id="menu-toggle" 
      class="md:hidden p-2 focus:outline-none z-50 relative" 
      aria-label="Toggle menu"
    >
      <svg 
        id="menu-icon" 
        class="w-6 h-6" 
        fill="none" 
        stroke="currentColor" 
        viewBox="0 0 24 24"
      >
        <path 
          id="menu-path" 
          stroke-linecap="round" 
          stroke-linejoin="round" 
          stroke-width="2" 
          d="M4 6h16M4 12h16M4 18h16" 
        />
      </svg>
    </button>

    <!-- Mobile Navigation -->
    <ul 
      id="mobile-menu" 
      class="hidden fixed inset-0 bg-[#D4E4FE] flex-col justify-center items-center gap-12 transition-all duration-300 z-40"
    >
      {dataHeader.navbar.map((item: { titulo: string, link: string }, i: number) => (
        <li>
          <a 
            href={item.link} 
            class="text-xl hover:text-pink-500 block text-center"
          >
            {item.titulo}
          </a>
        </li>
      ))}
    </ul>
  </nav>
</header>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const menuToggle = document.getElementById("menu-toggle") as any
    const mobileMenu = document.getElementById("mobile-menu") as any
    const menuIconPath = document.getElementById("menu-path") as any
    const menuLinks = mobileMenu.querySelectorAll("a")

    const toggleMenu = () => {
      if (mobileMenu.classList.contains("hidden")) {
        mobileMenu.classList.remove("hidden")
        mobileMenu.classList.add("flex")
        menuIconPath.setAttribute("d", "M6 18L18 6M6 6l12 12") // Icono de "cerrar"
      } else {
        mobileMenu.classList.add("hidden")
        document.body.classList.remove("overflow-hidden")
        document.body.classList.remove("flex")
        menuIconPath.setAttribute("d", "M4 6h16M4 12h16M4 18h16") // Icono de "hamburguesa"
      }
    }

    // Listener para abrir/cerrar el menú
    menuToggle.addEventListener("click", toggleMenu)

    // Listener para cerrar el menú al hacer clic en un enlace
    menuLinks.forEach((link:any) => {
      link.addEventListener("click", toggleMenu)
    })
  })
</script>
